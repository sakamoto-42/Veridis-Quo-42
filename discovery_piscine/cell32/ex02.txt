cd /home/event/discovery_piscine
mkdir cell32
cd cell32
mkdir ex02
cd ex02

cp /home/event/discovery_piscine/cell31/ex01/balloon.html calc.html	// copie le fichier html d'exo01 vers exo02

vim calc.html
i

<!DOCTYPE html>
<html lang="en">		
	<head>
		<title>Calc</title>
		<meta charset="UTF-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<style>
			html, body, .container {
				height: 100%;
			}

			body {
				margin: 0;
			}

			.container {
				display: flex;
				justify-content: center;
				align-items: center;
			}
		</style>
	</head>
	<body>
		<div class="container">
			<form id="calc-form" method="post" action="">		// method post : envoie les données du formulaire
										// au fichier action (vide ici)
				<input type="text" required id="left-member-input" name="left-member">	// required : champ requis
				<select required id="operator-select" name="operator">			// menu déroulant des opérateurs
					<option value="+">+</option>	// option +
					<option value="-">-</option>	// option -
					<option value="*">*</option>	// etc.
					<option value="/">/</option>
					<option value="%">%</option>
				</select>
				<input type="text" required id="right-member-input" name="right-member">
				<input type="submit" value="Try me!">
			</form>
		<div>
		<script>
			const formElem = document.getElementById("calc-form");				// pour sélectionner le formulaire
			const leftMemberInputElem = document.getElementById("left-member-input");	// pour sélectionner le 1er champ
			const operatorSelectElem = document.getElementById("operator-select");		// pour sélectionner le select
			const rightMemberInputElem = document.getElementById("right-member-input");	// pour sélectionner le 2ème champ
			const errorMessage = ["It's over 9000!", "Error :(", "Please, use me ..."];	// tableau des messages d'erreur

			formElem.addEventListener("submit", function(event) {	// lorsque le formulaire est soumis
				event.preventDefault();				// empêche la page d'être rechargée
										// (comportement par défaut lors de la soumission d'un formulaire)

				let leftMemberValue = parseInt(leftMemberInputElem.value, 10);	// on récupère le texte du 1er champ et on le convertit en entier
												// en base décimale (base 10)
				let operatorValue = operatorSelectElem.value;			// on récupère la valeur de l'option du select
				let rightMemberValue = parseInt(rightMemberInputElem.value, 10); // on récupère le texte du 2eme champ et on le convertit en entier en base 10

				if (leftMemberValue >= 0 && rightMemberValue >= 0) {		// si les 2 champs contiennent des valeurs supérieures ou égales à 0
					switch(operatorValue) {					// plusieurs cas selon la valeur de operatorValue
						case "+":					// si l'opérateur est +
							display(leftMemberValue + rightMemberValue);	// on additionne
							break;						// on sort du switch
						case "-":						// si -
							display(leftMemberValue - rightMemberValue);	// on soustrait
							break;						// on sort
						case "*":
							display(leftMemberValue * rightMemberValue);
							break;
						case "/":						// si /
							if (rightMemberValue === 0)			// si on divise par 0
								display(errorMessage[0]);		// on affiche (alert et log) le 1er message d'erreur
							else						// sinon, on effectue le calcul
								display(leftMemberValue / rightMemberValue);
							break;
						case "%":						// si %
							if (rightMemberValue === 0)			// même logique que plus haut
								display(errorMessage[0]);
							else
								display(leftMemberValue % rightMemberValue);
							break;
					}
				}
				else	// sinon (si au moins une des valeurs des champs texte est inférieure à 0, ou un caractère non numérique)
					// ce else se traduit par : if (leftMemberValue < 0 || rightMemberValue < 0)		
					alert(errorMessage[1]);		// on affiche le 2ème message d'erreur (alert seulement)
			});

			function display(message) {	// fonction pour alert et log un message
				alert(message);
				console.log(message);
			}

			setInterval(function() {	// par intervalle de 30 secondes (30 000 millisecondes)
				alert(errorMessage[2]);	// alert le 3ème message d'erreur
			}, 30000);
		</script>
	</body>					
</html>

echap
:wq
enter

firefox calc.html